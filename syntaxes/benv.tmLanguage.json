{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "better.env",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#brackets"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#function"
		},
		{
			"include": "#identifiers"
		}
	],
	"repository": {
		"strings": {
			"name": "string.quoted.double.benv",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.benv",
					"match": "\\\\."
				},
				{
					"match": "(\\$)([a-zA-Z_][a-zA-Z0-9_]*)",
					"name": "variable.other",
					"captures": {
						"1": { "name": "punctuation.colon.benv" },
						"2": { "name": "variable.other.benv" }
					}
				},
				{
					"begin": "\\$\\{",
					"end": "\\}",
					"name": "meta.expression",
					"beginCaptures": {
						"0": { "name": "punctuation.colon.benv" }
					},
					"endCaptures": {
						"0": { "name": "punctuation.colon.benv" }
					},
					"patterns": [
						{
							"include": "source.benv"
						},
						{
							"name": "string.quoted.single.benv",
							"begin": "'",
							"end": "'"
						}
					]
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.benv",
					"match": "\\b(if|else)\\b"
				}
			]
		},
		"identifiers": {
			"patterns": [
				{
					"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
					"name": "variable.name"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"match": "\\b\\d+\\b",
					"name": "constant.numeric.benv"
				},
				{
					"match": "\\b\\d+\\.\\d+\\b",
					"name": "constant.numeric.float.benv"
				},
				{
					"match": "\\b(true|false|null)\\b",
					"name": "constant.language.benv"
				},
				{
					"match": "([a-zA-Z_][a-zA-Z0-9_]*)(:)",
					"name": "constant.language.benv",
					"captures": {
						"1": { "name": "markup.deleted.benv" },
						"2": { "name": "punctuation.colon.benv" }
					}
				}
			]
		},
		"function": {
			"patterns": [
				{
					"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b(?=\\s*\\()",
					"name": "entity.name.method.benv"
				}
			]
		},
		"brackets": {
			"patterns": [
				{
					"name": "punctuation.definition.bracket.benv",
					"match": "[()\\[\\]{}]"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.benv",
					"match": "\\+|-|\\*|/|%|<|>|<=|>=|==|!=|\\|\\||&&|=|:"
				}
			]
		}
	},
	"scopeName": "source.benv"
}
